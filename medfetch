fetch_os_info() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        echo "$NAME $VERSION"
    else
        echo "OS information not found"
    fi
}

fetch_kernel_version() {
    uname -r
}

fetch_system_uptime() {
    uptime -p | sed 's/up //'
}

fetch_memory_usage() {
    free -h | awk '/^Mem:/ {print $3 " / " $2}'
}

fetch_memory_percentage() {
    free | awk '/^Mem:/ {printf("%.2f%%", $3/$2 * 100.0)}'
}

fetch_cpu_model() {
    lscpu | grep "Model name:" | sed 's/Model name: *//'
}

fetch_cpu_usage() {
    top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1"%"}'
}

fetch_gpu_info() {
    lspci | grep -i 'vga\|3d\|2d' | cut -d ' ' -f5- | uniq
}

fetch_disk_usage() {
    df -h | awk '$1 ~ /^\/dev/ && $NF !~ /\/boot/ {
        if ($1 == "/dev/nvme0n1p1") disk="Root";
        else if ($1 == "/dev/sda1") disk="Home";
        else if ($1 == "/dev/sdb1") disk="Data";
        else disk=$1;
        printf "%s: %s / %s (%s used)\n", disk, $3, $2, $5
    }'
}

fetch_current_user() {
    echo $USER
}

fetch_hostname() {
    echo $HOSTNAME
}

fetch_package_count() {
    if command -v pacman >/dev/null; then
        echo "$(pacman -Q | wc -l) (pacman)"
    elif command -v dpkg >/dev/null; then
        echo "$(dpkg --get-selections | grep -v deinstall | wc -l) (dpkg)"
    elif command -v rpm >/dev/null; then
        echo "$(rpm -qa | wc -l) (rpm)"
    else
        echo "Package manager not found"
    fi
}

fetch_terminal_type() {
    echo $TERM
}

display_ascii_art() {
    echo -e "\e[1;37m
  ___  __    __   
   MM 6MMb  6MMb  
   MM69  MM69  Mb 
   MM'   MM'   MM 
   MM    MM    MM 
   MM    MM    MM 
   MM    MM    MM 
  _MM_  _MM_  _MM_    
    \e[0m"
}

display_ascii_art
echo -e "\e[1;37m $(fetch_current_user)@$(fetch_hostname)\e[0m"
echo -e "\e[1;91m ------------------\e[0m"
echo -e "\e[1;91m OS:\e[0m          $(fetch_os_info)"
echo -e "\e[1;91m Uptime:\e[0m      $(fetch_system_uptime)"
echo -e "\e[1;91m Packages:\e[0m    $(fetch_package_count)"
echo -e "\e[1;91m CPU:\e[0m         $(fetch_cpu_model) ($(fetch_cpu_usage))"
echo -e "\e[1;91m GPU:\e[0m         $(fetch_gpu_info)"
echo -e "\e[1;91m Memory:\e[0m      $(fetch_memory_usage) ($(fetch_memory_percentage))"
echo -e "\e[1;91m Disk Usage:\e[0m "
fetch_disk_usage | while read -r line; do
    echo -e "             $line"
done

echo -e "\n\e[1;30m███\e[0m\e[1;31m███\e[0m\e[1;32m███\e[0m\e[1;33m███\e[0m\e[1;34m███\e[0m\e[1;35m███\e[0m\e[1;36m███\e[0m\e[1;37m███\e[0m"
echo -e "\e[1;90m███\e[0m\e[1;91m███\e[0m\e[1;92m███\e[0m\e[1;93m███\e[0m\e[1;94m███\e[0m\e[1;95m███\e[0m\e[1;96m███\e[0m\e[1;97m███\e[0m"

